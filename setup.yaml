---
- hosts: setup
  gather_facts: False
  vars:
    imgfile: cirros-0.3.1-x86_64-disk.img
    cirros_url: http://download.cirros-cloud.net/0.3.1/$imgfile
    admin_password: admin
    tenant: demo
    internal_network_name: demo
    internal_network_subnet_name: demo-subnet
    internal_network_subnet_cidr: 10.5.5.0/24
    internal_network_subnet_dns_nameservers: 8.8.8.8
    internal_network_subnet_gateway_ip: 10.5.5.1
    router_name: demo-router
    external_network_name: public
    external_network_subnet_name: public-subnet
    external_network_subnet_cidr: 10.0.0.0/24
    external_network_subnet_gateway_ip: 10.0.0.1
    external_network_subnet_allocation_pool_start: 10.0.0.200
    external_network_subnet_allocation_pool_end: 10.0.0.250
  tasks:

    # glance
    - name: ensure temporary image directory exists
      file: dest=/tmp/images state=directory

    - name: ensure test image has been obtained
      get_url: url=$cirros_url dest=/tmp/images/$imgfile

    - name: add cirros image
      glance: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
              tenant="{{ tenant }}" 
              user=admin 
              password="{{ admin_password }}"
              region="{{ keystone_default_region }}"
              name=cirros-0.3.1-x86_64 
              file=/tmp/images/$imgfile 
              disk_format=qcow2 
              is_public=true 
      register: image_id

    # quantum
    - name: create the internal network
      quantum_network: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                       login_tenant_name="{{ tenant }}" 
                       login_username=admin 
                       login_password="{{ admin_password }}" 
                       name="{{ internal_network_name }}" 
                       router_external=False
                       provider_network_type=gre
                       provider_segmentation_id=5
                       state=present
      register: network_id

    - name: create the subnet for internal network
      quantum_subnet: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                      login_tenant_name="{{ tenant }}" 
                      login_username=admin 
                      login_password="{{ admin_password }}" 
                      name="{{ internal_network_subnet_name }}"
                      network_name="{{ internal_network_name }}"
                      cidr="{{ internal_network_subnet_cidr }}"
                      enable_dhcp=true
                      gateway_ip="{{ internal_network_subnet_gateway_ip }}"
                      state=present

    - name: create the external network
      quantum_network: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                       login_tenant_name="{{ tenant }}" 
                       login_username=admin 
                       login_password="{{ admin_password }}" 
                       name="{{ external_network_name }}" 
                       router_external=True
                       provider_network_type=gre
                       provider_segmentation_id=6
                       state=present

    - name: create the subnet for external network
      quantum_subnet: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                      name="{{ internal_network_name }}" 
                      login_tenant_name="{{ tenant }}" 
                      login_username=admin 
                      login_password="{{ admin_password }}" 
                      name="{{ external_network_subnet_name }}" 
                      network_name="{{ external_network_name }}"
                      cidr="{{ external_network_subnet_cidr }}"
                      enable_dhcp=false
                      gateway_ip="{{ external_network_subnet_gateway_ip }}"
                      allocation_pool_start="{{ external_network_subnet_allocation_pool_start }}"
                      allocation_pool_end="{{ external_network_subnet_allocation_pool_end }}"
                      state=present

    - name: create router
      quantum_router: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                      login_tenant_name="{{ tenant }}" 
                      login_username=admin 
                      login_password="{{ admin_password }}" 
                      name="{{ router_name }}"
                      state=present 
      register: router


    - name: create internal interface for router
      quantum_router_interface: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                                login_tenant_name="{{ tenant }}" 
                                login_username=admin 
                                login_password="{{ admin_password }}" 
                                router_name="{{ router_name }}"
                                subnet_name="{{ internal_network_subnet_name }}"
                                state=present 

    - name: create external gateway for router
      quantum_router_gateway: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                              login_tenant_name="{{ tenant }}" 
                              login_username=admin 
                              login_password="{{ admin_password }}" 
                              router_name="{{ router_name }}"
                              network_name="{{ external_network_name }}"
                              state=present

    # - name: add rule to allow ping to default security group

    # - name: add rule to allow ssh to default security group

    # - name: create ssh keypair

    #- name: add ssh keypair to nova
    #  nova_keypair: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
    #                login_tenant_name="{{ tenant }}" 
    #                login_username=admin 
    #                login_password="{{ admin_password }}" 
    #                name=default
    #                public_key=~/.ssh/id_rsa.pub
    #                state=present

    - name: create a new virtual machine instance
      nova_compute: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                    login_tenant_name="{{ tenant }}" 
                    login_username=admin 
                    login_password="{{ admin_password }}" 
                    name=cirros
                    flavor_id=1
                    image_id="{{ image_id}}"
                    key_name=default
                    nics=[{{ network_id }}]
                    security_groups=default
                    wait=yes
                    state=present

    - name: associate a floating ip with the instance
      quantum_floating_ip: auth_url="http://{{ keystone_endpoint_host }}:5000/v2.0"
                           login_tenant_name="{{ tenant }}" 
                           login_username=admin 
                           login_password="{{ admin_password }}" 
                           instance_name=cirros
                           network_name="{{ external_network_name }}"
                           state=present
