[DEFAULT]

# LOGS/STATE
verbose=True
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova

# ROOT ACCESS
root_helper=sudo nova-rootwrap

# AUTHENTICATION
auth_strategy=keystone

# SCHEDULER
compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler

# VOLUMES
volume_group=nova-volumes
volume_name_template=volume-%08x
iscsi_helper=tgtadm

# DATABASE
sql_connection=mysql://nova:{{ nova_db_password }}@{{ controller_ip }}/nova

# COMPUTE
libvirt_type=qemu
connection_type=libvirt
instance_name_template=instance-%08x
api_paste_config=/etc/nova/api-paste.ini
allow_resize_to_same_host=True

# APIS
osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
ec2_dmz_host={{ controller_ip }}
s3_host={{ controller_ip }}

# RABBITMQ
rabbit_host={{ controller_ip }}

# GLANCE
image_service=nova.image.glance.GlanceImageService
glance_api_servers={{ controller_ip }}:9292

# NETWORK
network_manager=nova.network.manager.FlatDHCPManager
force_dhcp_release=True
dhcpbridge_flagfile=/etc/nova/nova.conf
firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver
my_ip={{ ansible_eth1["ipv4"]["address"] }}
public_interface=br100
vlan_interface=eth1
flat_network_bridge=br100
flat_interface=eth1
fixed_range=10.0.0.0/24
libvirt_use_virtio_for_bridges=True

# NOVNC CONSOLE
novncproxy_base_url=http://{{ controller_ip }}:6080/vnc_auto.html
vncserver_proxyclient_address={{ controller_ip }}
vncserver_listen={{ controller_ip }}
